@use '../abstracts/variables' as vars;
@use '../abstracts/breakpoints';
@use '../abstracts/mixins';

// =============================================================================
// WORK ARCHIVE PAGE STYLES
// Layout, filters, and grid for page-work.php
// Cards now use master card system in components/_card.scss
// =============================================================================

#work-archive {
  min-height: 100vh;
  color: var(--text-primary);
}

// =============================================================================
// WORK HEADER SECTION
// =============================================================================

.work-header {
  @include mixins.standard-header;

  .container {
    text-align: center;
  }

  h1 {
    // Using base typography - no font-size override needed
    color: var(--heading-color);
    margin-bottom: 1.5rem;
    text-align: left;
  }

  .supporting-text {
    // Using base typography - inherits font-size, adds layout-specific styling
    margin-bottom: 0;
    max-width: 600px;
    
    @include breakpoints.md {
      margin-bottom: 2rem;
    }
  }
}

// =============================================================================
// WORK FILTERS - TEMPORARILY DISABLED
// =============================================================================

/*
.work-filters {
  margin-top: 1.5rem;
  margin-bottom: 2rem;
  
  // Filter Controls Container
  .filter-controls {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }
  
  // Filter Toggle Button (icon only)
  .filter-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.25rem;
    width: 48px;
    height: 40px;
    padding: 0;
    background: var(--primary-color);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 8px;
    color: var(--text-primary);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    
    // Filter icon (light version)
    .far.fa-filter {
      font-size: vars.$font-sm;
      color: var(--text-primary);
      opacity: 0.8;
    }
    
    // Chevron icon (light version)
    .filter-toggle-icon {
      font-size: vars.$font-xs;
      transition: transform 0.3s ease;
      opacity: 0.6;
    }
    
    // Active filters badge
    &::after {
      content: '';
      position: absolute;
      top: -6px;
      right: -6px;
      width: 16px;
      height: 16px;
      background: var(--secondary-color);
      border: 2px solid var(--background-color);
      border-radius: 50%;
      opacity: 0;
      transform: scale(0);
      transition: all 0.3s ease;
    }
    
    // Hover state
    &:hover {
      background: var(--primary-color-light);
      border-color: rgba(255, 255, 255, 0.5);
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      
      .far.fa-filter {
        opacity: 1;
      }
      
      .filter-toggle-icon {
        opacity: 0.8;
      }
    }
    
    // Active state (when filters are applied)
    &.has-active-filters {
      background: var(--secondary-color);
      border-color: rgba(255, 255, 255, 0.4);
      
      &::after {
        opacity: 1;
        transform: scale(1);
      }
      
      &:hover {
        background: var(--secondary-color-light);
      }
    }
    
    // Expanded state
    &[aria-expanded="true"] {
      .filter-toggle-icon {
        transform: rotate(180deg);
      }
    }
    
    @include breakpoints.md {
      width: 52px;
      height: 44px;
      gap: 0.375rem;
    }
  }
  
  // Inline Reset Button (subdued)
  .filter-reset-inline {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    padding: 0;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 6px;
    color: var(--text-secondary);
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0;
    transform: scale(0.8);
    pointer-events: none;
    
    .fas.fa-times {
      font-size: vars.$font-xs;
    }
    
    // Show when filters are active
    &.visible {
      opacity: 1;
      transform: scale(1);
      pointer-events: auto;
    }
    
    &:hover {
      background: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.2);
      color: var(--text-primary);
      transform: scale(1.05);
    }
    
    &:active {
      transform: scale(0.95);
    }
    
    @include breakpoints.md {
      width: 36px;
      height: 36px;
    }
  }

  // Filter Form (collapsible)
  .filter-form {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    align-items: end;
    max-width: 1000px;
    margin: 0 auto;
    padding: 1.5rem;
    background: var(--surface-color);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    opacity: 0;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    
    &.filter-form--visible {
      opacity: 1;
      transform: translateY(0);
    }
    
    @include breakpoints.md {
      flex-direction: column;
      align-items: stretch;
      padding: 1.25rem;
    }
  }

  .filter-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    min-width: 180px;
    
    @include breakpoints.md {
      min-width: auto;
      width: 100%;
    }

    label {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: vars.$font-sm;
      font-weight: 600;
      color: var(--text-primary);
    }

    select,
    input[type="text"] {
      padding: 0.75rem 1rem;
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 8px;
      color: var(--text-primary);
      font-size: vars.$font-sm;
      transition: all 0.3s ease;
      
      &:focus {
        outline: none;
        border-color: var(--primary-color);
        background: rgba(255, 255, 255, 0.08);
      }
      
      &::placeholder {
        color: var(--text-secondary);
      }
    }
  }

  .filter-reset {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    color: var(--text-secondary);
    font-size: vars.$font-sm;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    
    &:hover {
      background: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.2);
      color: var(--text-primary);
    }
    
    .fas.fa-times {
      font-size: vars.$font-xs;
    }
  }
}
*/

// =============================================================================
// WORK GRID SECTION
// =============================================================================

.work-grid {
  padding: 2rem 0 4rem;

  @include breakpoints.md {
    padding: 1.5rem 0 3rem;
  }

  .container {
    @include mixins.container;
  }
}

.work-list {
  @include mixins.work-grid;
}

// =============================================================================
// NO RESULTS MESSAGE
// =============================================================================

.no-work-found {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--text-secondary);
  font-size: vars.$font-lg;
  background: var(--surface-color);
  border-radius: 12px;
  margin: 2rem 0;
  grid-column: 1 / -1;
} 