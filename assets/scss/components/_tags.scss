@use "sass:map";
@use "../abstracts/variables" as vars;
@use "../abstracts/mixins";
@use "../abstracts/breakpoints";

// =============================================================================
// MASTER TAG SYSTEM
// Unified tag styling across all contexts (cards, sidebar, archive, etc.)
// =============================================================================

// =============================================================================
// BASE TAG MIXINS 
// =============================================================================

// Base tag styling - core structure and behavior
@mixin tag-base {
  display: inline-flex;
  align-items: center;
  padding: 4px 10px;
  font-size: vars.$font-xxs;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-radius: 2rem;
  transition: all 0.3s ease;
  cursor: default;
  text-decoration: none;
  
  // Ensure consistent text color
        color: var(--text-primary);
}

// Tag style variants
@mixin tag-style($style) {
  @if $style == 'homepage' or $style == 'card' {
    // Homepage/card style - using secondary color with opacity
    background: rgba(var(--color-secondary-rgb), 0.5);
    border: 1px solid rgba(var(--color-secondary-rgb), 0.7);
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    color: var(--text-primary);
    
    &:hover {
      background: rgba(var(--color-secondary-rgb), 0.85);
      border-color: rgba(var(--color-secondary-rgb), 0.9);
    }
  } @else if $style == 'sidebar' {
    // Sidebar style - subtle background with border
    background-color: rgba(255, 255, 255, 0.06);
    border: 1px solid rgba(255, 255, 255, 0.12);
    border-radius: 2rem;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: none;
    letter-spacing: normal;
    color: rgba(255, 255, 255, 0.75);
    
    &:hover {
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      color: rgba(255, 255, 255, 0.9);
    }
  } @else if $style == 'minimal' {
    // Minimal style for basic contexts
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    
    &:hover {
      background: rgba(255, 255, 255, 0.2);
    }
  }
}

/**
 * UNIFIED TAG COLOR SYSTEM
 * 
 * Generates consistent tag styling across all contexts with brand colors.
 * 
 * Color mapping:
 * - project/project-category: --tag-project-color (magenta #BF3978)
 * - deliverable/deliverable-type: --tag-deliverable-color (amber #f59e0b)
 * - technology/tool: --tag-technology-color (blue-gray #45748C)
 * - skill: --tag-skill-color (teal-green #10b981)
 * - company: --primary-color (blue-gray #45748C)
 * - article: --tag-article-color (teal variant)
 * 
 * Usage:
 * @include tag-color-variant('project'); // Generates all contexts for project tags
 * @include tag-color-variant('deliverable'); // Generates all contexts for deliverable tags
 */

// Master tag color variant generator
@mixin tag-color-variant($color-type, $custom-settings: ()) {
  $color-var: null;
  $special-sidebar-settings: ();
  
  // Map color types to CSS variables
  @if $color-type == 'project' or $color-type == 'project-category' {
    $color-var: --tag-project-color;
  } @else if $color-type == 'deliverable' or $color-type == 'deliverable-type' {
    $color-var: --tag-deliverable-color;
  } @else if $color-type == 'technology' or $color-type == 'tool' {
    $color-var: --tag-technology-color;
  } @else if $color-type == 'skill' {
    $color-var: --tag-skill-color;
    $special-sidebar-settings: (opacity: 0.55, hover-opacity: 0.75, bg-opacity: 0.25, border-opacity: 0.75, color-opacity: 1);
  } @else if $color-type == 'company' {
    $color-var: --color-primary;
  } @else if $color-type == 'article' or $color-type == 'article-category' {
    $color-var: --tag-article-color;
  }
  
  // Generate homepage/card styles
  &.tag-style-homepage,
  &.tag-style-card {
    background: rgba(var(#{$color-var}-rgb), 0.5);
    border-color: rgba(var(#{$color-var}-rgb), 0.7);
    
    &:hover {
      background: rgba(var(#{$color-var}-rgb), 0.85);
    }
  }
  
  // Generate sidebar styles
  &.tag-style-sidebar {
    $bg-opacity: if(map.has-key($special-sidebar-settings, bg-opacity), map.get($special-sidebar-settings, bg-opacity), 0.1);
    $border-opacity: if(map.has-key($special-sidebar-settings, border-opacity), map.get($special-sidebar-settings, border-opacity), 0.2);
    $color-opacity: if(map.has-key($special-sidebar-settings, color-opacity), map.get($special-sidebar-settings, color-opacity), 0.7);
    $base-opacity: if(map.has-key($special-sidebar-settings, opacity), map.get($special-sidebar-settings, opacity), 1);
    
    background-color: rgba(var(#{$color-var}-rgb), $bg-opacity);
    border-color: rgba(var(#{$color-var}-rgb), $border-opacity);
    color: rgba(var(#{$color-var}-rgb), $color-opacity);
    
    @if $base-opacity != 1 {
      opacity: $base-opacity;
    }
    
    &:hover {
      $hover-opacity: if(map.has-key($special-sidebar-settings, hover-opacity), map.get($special-sidebar-settings, hover-opacity), 1);
      
      background-color: var(#{$color-var});
      border-color: var(#{$color-var});
      color: var(--text-primary);
      
      @if $hover-opacity != 1 {
        opacity: $hover-opacity;
      }
    }
  }
}

// Legacy mixin for backward compatibility - now uses consolidated implementation
@mixin tag-color($color-type) {
  @include tag-color-variant($color-type);
}

// Tag state modifiers
@mixin tag-state($state) {
  @if $state == 'non-clickable' {
    cursor: default;
    
    &:hover {
      transform: none !important;
      box-shadow: none !important;
      background-color: inherit !important;
      border-color: inherit !important;
      color: inherit !important;
    }
  } @else if $state == 'clickable' {
    cursor: pointer;
    text-decoration: none;
    
    &:hover {
      text-decoration: none;
    }
  }
}

// =============================================================================
// MASTER TAG CLASSES
// =============================================================================

.tag {
  @include tag-base;
  max-height: fit-content; // Prevent height inheritance from containers

  // Style variants
  &.tag-style-homepage,
  &.tag-style-card {
    @include tag-style('homepage');
  }

  &.tag-style-sidebar {
    @include tag-style('sidebar');
  }

  &.tag-style-minimal {
    @include tag-style('minimal');
  }

  // Color variants
  &.tag-project,
  &.tag-project-category {
    @include tag-color('project');
  }

  &.tag-deliverable,
  &.tag-deliverable-type,
  &.tag-type {
    @include tag-color('deliverable');
  }

  &.tag-technology,
  &.tag-tool {
    @include tag-color('technology');
  }

  &.tag-skill {
    @include tag-color('skill');
  }

  &.tag-company {
    @include tag-color('company');
  }

  &.tag-article,
  &.tag-article-category {
    @include tag-color('article');
  }

  // State modifiers
  &.tag-non-clickable {
    @include tag-state('non-clickable');
  }

  &.tag-clickable {
    @include tag-state('clickable');
  }
}

// =============================================================================
// CONTEXT-SPECIFIC HELPERS
// =============================================================================

// Card tags container
.card__tags {
  position: absolute;
  top: 10px;
  left: 10px;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  z-index: 20;

  .tag {
    // Tags in cards default to homepage style
    @include tag-style('homepage');
  }
}

// Sidebar tags container
.tags-cloud {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;

  .tag {
    // Tags in sidebar default to sidebar style
    @include tag-style('sidebar');
  }
}

// Archive/listing tags container
.tags-list {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;

  .tag {
    // Tags in lists default to minimal style
    @include tag-style('minimal');
  }
}

// =============================================================================
// RESPONSIVE DESIGN
// =============================================================================

@include breakpoints.md {
  .tags-cloud {
    gap: 0.5rem;
    
    .tag {
      padding: 0.375rem 0.75rem;
      font-size: 0.8125rem;
    }
  }
  
  .single-page-tag-wrapper {
    .single-page-tag {
      padding: .25rem .5rem;
      font-size: .75rem;
    }
  }
} 

// Single Page Tags (above h1s on template pages)
.single-page-tag-wrapper {
  margin-bottom: 1rem;
  text-align: left; // Ensure left alignment

  .single-page-tag {
    display: inline-block;
    padding: .25rem .75rem;
    border-radius: 2rem;
    font-size: .75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.2s ease;

    // Default styling
    background: rgba(var(--color-secondary-rgb), 0.15);
    border: 1px solid rgba(var(--color-secondary-rgb), 0.3);
    color: var(--color-secondary);

    // Project-specific styling
    &.tag-project {
      background: rgba(var(--color-primary-rgb), .3);
      border: 1px solid rgba(var(--color-primary-rgb), .5);
      color: var(--color-primary);
    }

    // Deliverable-specific styling
    &.tag-deliverable {
      background: rgba(var(--color-quaternary-rgb), .3);
      border: 1px solid rgba(var(--color-quaternary-rgb), .5);
      color: var(--color-quaternary);
    }

    // Service Area-specific styling (blog posts)
    &.tag-service-area {
      background: rgba(var(--color-tertiary-rgb), .3);
      border: 1px solid rgba(var(--color-tertiary-rgb), .5);
      color: var(--color-tertiary);
    }

    // Work Area-specific styling (work archive page)
    &.tag-work-area {
      background: rgba(var(--color-primary-rgb), .3);
      border: 1px solid rgba(var(--color-primary-rgb), .5);
      color: var(--color-primary);
    }

    // Icon styling for tags with icons
    &.tag-with-icon {
      i {
        margin-right: 0.5rem;
        font-size: 0.875rem;
        
        // Duotone icon styling - primary layer uses tag color, secondary layer is more subtle
        &.fa-duotone {
          --fa-primary-color: currentColor;
          --fa-secondary-color: currentColor;
          --fa-secondary-opacity: 0.4;
        }
        
        // Light icon styling - clean, minimal appearance
        &.fa-light {
          font-weight: 300;
          opacity: 0.9;
        }
      }
    }
  }
} 