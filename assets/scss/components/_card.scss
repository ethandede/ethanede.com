@use "../abstracts/variables" as vars;
@use "../abstracts/mixins";
@use "../abstracts/breakpoints";

// =============================================================================
// MASTER CARD SYSTEM
// Based on homepage portfolio cards as gold standard
// =============================================================================

// =============================================================================
// GRID CONTAINERS
// =============================================================================

// Standard deliverables grid used across multiple pages
.deliverables-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 24px;
  margin-top: 2rem;

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 16px;
  }
}

// Legacy styles removed - now integrated into master card system with --deliverable modifier

// Base card mixin - core structure and behavior
@mixin card-base {
  position: relative;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.08);
  border-radius: 8px;
  text-align: left;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  // CSS transition removed - JavaScript handles all hover animations now
  // transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  display: flex;
  flex-direction: column;
  height: 100%;
  cursor: pointer !important;
  text-decoration: none !important;
  color: inherit !important;

  // Gradient overlay at top of image
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 25%;
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), transparent);
    z-index: 5;
    pointer-events: none; // Ensure it doesn't interfere with interactions
  }

  // Remove CSS hover - JavaScript handles the hover animations
  // &:hover {
  //   transform: translateY(-5px);
  //   box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
  // }
}

// Card link wrapper
@mixin card-link {
  display: block;
  text-decoration: none;
  color: inherit;
  height: 100%;
  width: 100%;
  position: relative;
  z-index: 1;
  cursor: pointer !important;
  
  *, *::before, *::after {
    cursor: pointer !important;
  }
}

// Card overlay
@mixin card-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--primary-color);
  opacity: 0;
  transition: opacity 0.3s ease;
  display: block;

  // Hide any inherited icons
  i {
    display: none;
  }
}

// Card image
@mixin card-image {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 8px 8px 0 0;
  transition: filter 0.3s ease;
  object-fit: cover;
  object-position: center;
  cursor: pointer !important;
}

// Card image container
@mixin card-image-container($height: auto) {
  position: relative;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.05);
  
  @if $height != auto {
    height: $height;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  img {
    @include card-image;
    
    @if $height != auto {
      height: 100%;
    }
  }
}

// Universal card image sizing for fixed-height containers
// Applied to all context variants that set container height
@mixin card-image-fill {
  .card__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
}

// Card content area
@mixin card-content {
  padding: 20px;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  cursor: pointer !important;

  .card__content-main {
    flex-grow: 1;
  }

  .card__content-footer {
    // Footer provides space for company info and arrow
    height: 40px; // Space for arrow
    flex-shrink: 0;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  h3 {
    font-size: vars.$font-lg;
    margin-bottom: 10px;
    color: var(--heading-color);
    cursor: pointer !important;
  }

  h4 {
    font-size: vars.$font-md;
    margin-bottom: 10px;
    color: var(--heading-color);
    cursor: pointer !important;
  }

  p {
    font-size: vars.$font-sm;
    color: var(--text-secondary);
    margin-bottom: 1rem;
    line-height: 1.5;
    cursor: pointer !important;
  }
}

// Card company information
.card__company {
  .company-info {
    display: flex;
    align-items: center;
  }
  
  .company-logo-card {
    max-width: 80px;
    max-height: 30px;
    height: auto;
    width: auto;
    object-fit: contain;
    filter: brightness(0.9) opacity(0.85);
    transition: all 0.3s ease;
    cursor: pointer !important;
  }
  
  .company-name {
    font-size: vars.$font-xs;
    color: var(--text-secondary);
    font-weight: 500;
    opacity: 0.8;
    cursor: pointer !important;
    transition: all 0.3s ease;
  }
}

// Card hover effects for company logos
.card:hover {
  .company-logo-card {
    filter: brightness(1) opacity(1);
    transform: scale(1.05);
  }
  
  .company-name {
    opacity: 1;
    color: var(--text-primary);
  }
}

// Card tags - now using master tag system
@mixin card-tags {
  position: absolute;
  top: 10px;
  left: 10px;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  z-index: 20;

  // Tags styling is now handled by the master tag system in components/_tags.scss
  // Default behavior for cards is defined in .card__tags in _tags.scss
}

// Card media types
@mixin card-media-types {
  display: flex;
  gap: 8px;
  margin: 8px 0 20px 0; // Space from description text and before arrow area
  
  .media-type-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    transition: all 0.3s ease;

    i {
      font-size: vars.$font-xs;
      color: rgba(255, 255, 255, 0.7);
      transition: color 0.3s ease;
    }

    &:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-1px);

      i {
        color: #fff;
      }
    }

    // Specific colors for different media types - matching PHP ucfirst() output
    &[title="Image"] {
      &:hover {
        background: rgba(34, 197, 94, 0.2);
        i {
          color: var(--tag-skill-color);
        }
      }
    }

    &[title="Video"] {
      &:hover {
        background: rgba(239, 68, 68, 0.2);
        i {
          color: #ef4444;
        }
      }
    }

    &[title="Pdf"] {
      &:hover {
        background: rgba(239, 68, 68, 0.2);
        i {
          color: #ef4444;
        }
      }
    }
  }
}

// Card type system for deliverables
@mixin card-type {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
  font-size: vars.$font-sm;

  .type-label {
    color: #fff;
    font-size: vars.$font-xs;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    opacity: 0.7;
  }

  .type-value {
    display: inline-flex;
    align-items: center;
    padding: 0.375rem 0.75rem;
    background-color: rgba(var(--primary-color-rgb), 0.1);
    border: 1px solid rgba(var(--primary-color-rgb), 0.2);
    color: var(--text-primary);
    text-decoration: none;
    border-radius: 0.375rem;
    font-size: vars.$font-xs;
    font-weight: 500;
    transition: all 0.2s ease;

    &:hover {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      color: white;
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
  }

  // Legacy support for single type value (no label/value split)
  &:not(:has(.type-label)) {
    display: inline-block;
    background: rgba(var(--primary-color-rgb), 0.15);
    color: var(--primary-color);
    padding: 4px 12px;
    border-radius: 20px;
    font-size: vars.$font-xs;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 0;
    gap: 0;
  }
}

// Card placeholders for missing content
@mixin card-placeholder($type: 'default') {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.05);
  color: var(--text-secondary);

  i {
    font-size: 3rem;
    opacity: 0.6;
  }

  @if $type == 'video' {
    background: rgba(var(--primary-color-rgb), 0.1);
    
    i {
      color: var(--primary-color);
    }
  }
}

// Card arrow
@mixin card-arrow {
  // Arrow positioned in footer alongside company info
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: auto;

  i, svg {
    font-size: 2rem;
    color: #fff;
    // Remove CSS transitions - JavaScript handles the animation
  }

  // Remove CSS hover - JavaScript handles the arrow animation
  // &:hover i, &:hover svg {
  //   transform: translateX(4px);
  // }
}

// Card hover effects
@mixin card-hover-effects($overlay-opacity: 0.15, $grayscale: true) {
  &:hover {
    .card__overlay {
      opacity: $overlay-opacity;
    }

    img {
      @if $grayscale {
        filter: grayscale(100%);
      } @else {
        transform: scale(1.05);
      }
    }
  }
}

// Card type variants - now purely semantic, no visual differences
@mixin card-variant($type) {
  // All card types now use identical styling
  // Type variants are purely semantic for JavaScript/PHP targeting
  // Visual consistency maintained across all card types
}

// Card context variants
@mixin card-context($context) {
  @if $context == 'archive' {
    .card__image-container {
      height: 200px;
      
      @media (max-width: 768px) {
        height: 160px;
      }
    }
    @include card-image-fill;
  } @else if $context == 'single' {
    .card__image-container {
      height: 200px;
      
      @media (max-width: 768px) {
        height: 160px;
      }
    }
    @include card-image-fill;
  } @else if $context == 'work' {
    .card__image-container {
      height: 200px;
      
      @media (max-width: 768px) {
        height: 160px;
      }
    }
    @include card-image-fill;
  } @else if $context == 'sidebar' {
    // Streamlined sidebar design with background images
    background: var(--card-bg);
    border-radius: 12px;
    padding: 0; // Remove padding for background image approach
    border: 1px solid rgba(255,255,255,0.15);
    flex-direction: column; // Stack vertically for background image
    align-items: stretch;
    justify-content: flex-end; // Align content to bottom
    height: 80px; // Fixed compact height
    min-height: 80px;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    
    // Hide tags in sidebar cards
    .card__tags {
      display: none !important;
    }
    
    // Background image container
    .card__image-container {
      display: block; // Show images as backgrounds
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;
      
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          135deg,
          rgba(0, 0, 0, 0.8) 0%,
          rgba(0, 0, 0, 0.6) 50%,
          rgba(0, 0, 0, 0.9) 100%
        );
        z-index: 2;
        transition: opacity 0.3s ease;
      }
      
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        transition: transform 0.3s ease;
        image-rendering: -webkit-optimize-contrast;
        image-rendering: crisp-edges;
        backface-visibility: hidden;
        transform: translateZ(0);
      }
    }
    
    .card__content {
      padding: 1rem 1.2rem;
      flex: 1;
      display: flex;
      flex-flow: row nowrap; // Force horizontal layout
      align-items: center;
      justify-content: space-between;
      position: relative;
      z-index: 3; // Above background
      height: 100%; // Take full height
      
      .card__content-main {
        flex: 1;
        padding: 0; // Remove any padding that might push content up
        
        h3, h4 {
          font-size: 0.95rem;
          margin: 0;
          color: rgba(255, 255, 255, 0.95);
          font-weight: 600;
          transition: color 0.3s ease;
          text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
          line-height: 1.2;
        }
        
        p {
          display: none; // Keep descriptions hidden
        }
      }
      
      .card__content-footer {
        flex-shrink: 0; // Prevent arrow from shrinking
      }
    }
    
    .card__arrow {
      position: static;
      color: rgba(255, 255, 255, 0.8);
      font-size: 1rem;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 32px; // Larger arrow
      height: 32px; // Larger arrow
      // Removed background and backdrop-filter
      flex-shrink: 0; // Prevent shrinking
      
      i {
        font-size: 1rem; // Larger icon
        color: rgba(255, 255, 255, 0.9);
        transition: all 0.3s ease;
      }
    }
    
    &:hover {
      border-color: var(--primary-color);
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
      
      .card__image-container {
        &::before {
          opacity: 0.6; // Lighter overlay on hover
        }
        
        img {
          transform: scale(1.05); // Subtle zoom effect
        }
      }
      
      .card__content h3,
      .card__content h4 {
        color: rgba(255, 255, 255, 1);
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
      }
      
      .card__arrow {
        // Removed background change on hover
        transform: translateX(4px);
        
        i {
          color: white;
        }
      }
    }
    
    // Mobile responsive
    @media (max-width: 768px) {
      height: 70px; // Slightly smaller on mobile
      min-height: 70px;
      
      .card__content {
        padding: 0.875rem 1rem;
        
        h3, h4 {
          font-size: 0.875rem;
        }
      }
      
      .card__arrow {
        width: 28px; // Slightly smaller on mobile
        height: 28px;
        
        i {
          font-size: 0.875rem;
        }
      }
    }
  }
}

// =============================================================================
// MASTER CARD CLASSES
// =============================================================================

.card {
  @include card-base;
  @include card-hover-effects;
  
  cursor: pointer !important;
  
  & *, &::before, &::after {
    cursor: pointer !important;
  }
  
  &:hover, &:focus, &:active {
    cursor: pointer !important;
  }
  
  * {
    cursor: pointer !important;
    
    &:hover, &:focus, &:active {
      cursor: pointer !important;
    }
  }

  &__link {
    @include card-link;
  }
  


  &__overlay {
    @include card-overlay;
  }

  &__image-container {
    @include card-image-container;
  }

  &__image {
    @include card-image;
  }

  &__content {
    @include card-content;
  }

  &__tags {
    @include card-tags;
  }

  &__media-types {
    @include card-media-types;
  }

  &__type {
    @include card-type;
  }

  &__placeholder {
    @include card-placeholder;

    &--video {
      @include card-placeholder('video');
    }
  }

  &__arrow {
    @include card-arrow;
  }

  // Card type modifiers
  &--project {
    @include card-variant('project');
    
    // Project tag colors now handled by master tag system
    // Use .tag-project class on tags for automatic styling
  }

  &--deliverable {
    @include card-variant('deliverable');
    
    // Deliverable tag colors now handled by master tag system  
    // Use .tag-deliverable class on tags for automatic styling
  }

  // Card context modifiers
  &--archive {
    @include card-context('archive');
  }

  &--single {
    @include card-context('single');
  }

  &--work {
    @include card-context('work');
  }

  &--sidebar {
    @include card-context('sidebar');
  }
}

// =============================================================================
// RESPONSIVE DESIGN
// =============================================================================

@include breakpoints.md {
  .card {
    &__content {
      padding: 1.25rem;
    }
  }
} 